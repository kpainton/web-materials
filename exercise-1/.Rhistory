# ui.R
library(shiny)
library(plotly)
library(shinythemes)
shinyUI(navbarPage(theme = shinytheme("cyborg"),
"Electoral College",
# Create a tab panel for your map
tabPanel(
"Map",
titlePanel("Electoral College Votes"),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to map
selectInput(
"mapvar",
label = "Variable to Map",
choices = list(
"Population" = "population",
"Electoral Votes" = "votes",
"Votes / Population" = "ratio"
)
),
tags$br(),
HTML("<strong>Wow, I'm kinda lost!</strong>"),
tags$div(class = "sidebar",
tags$blockquote("I hope this floats"))
),
# Main panel: display plotly map
mainPanel(
plotlyOutput("map"),
tags$link(rel = "stylesheet", href = "/style.css"),
tags$div(class = "summary", checked = NA,
tags$p("This map shows the electoral college votes by states. The darker
the color, the higher the number of votes. California has
the highest votes.")
),
tags$a(href = "https://www.archives.gov/federal-register/electoral-college/about.html",
"Click here for more information")
)
)
),
tabPanel("About",
tags$h6("This webiste gives you electoral college information.  You can navigate
to the map page for more information and an interactive map")
)
# Create a tabPanel to show your scatter plot
))
# Read in data
source('./scripts/build_map.R')
source('./scripts/build_scatter.R')
setwd("~/Desktop/INFO/web-materials/exercise-1")
# server.R
library(dplyr)
# Read in data
source('./scripts/build_map.R')
source('./scripts/build_scatter.R')
df <- read.csv('./data/electoral_college.csv', stringsAsFactors = FALSE)
state_codes <- read.csv('./data/state_codes.csv', stringsAsFactors = FALSE)
# Join together state.codes and df
joined_data <- left_join(df, state_codes, by="state")
# Compute the electoral votes per 100K people in each state
joined_data <- joined_data %>% mutate(ratio = votes/population * 100000)
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$map <- renderPlotly({
return(build_map(joined_data, input$mapvar))
})
})
runApp()
runApp()
runApp()
